import{_ as a,c as i,o as t,ag as o}from"./chunks/framework.DPDPlp3K.js";const h=JSON.parse('{"title":"Media generation","description":"","frontmatter":{},"headers":[],"relativePath":"user-guide/media.md","filePath":"user-guide/media.md"}'),n={name:"user-guide/media.md"};function r(d,e,s,l,u,c){return t(),i("div",null,e[0]||(e[0]=[o('<h1 id="media-generation" tabindex="-1">Media generation <a class="header-anchor" href="#media-generation" aria-label="Permalink to &quot;Media generation&quot;">​</a></h1><p>User can review his knowledge in data table that can be sorted (for example by stability of memorization). Then he can select words and use them to generate media file:</p><ul><li>audio</li><li>video</li></ul><p>Both forms contain chunks with:</p><ul><li>word</li><li>word translation</li><li>sentence</li><li>sentence translation</li></ul><h2 id="audio" tabindex="-1">Audio <a class="header-anchor" href="#audio" aria-label="Permalink to &quot;Audio&quot;">​</a></h2><p>Audio files are generated in seconds directly in browser.</p><h2 id="video" tabindex="-1">Video <a class="header-anchor" href="#video" aria-label="Permalink to &quot;Video&quot;">​</a></h2><p>Video generation takes minutes and is done on server side.</p><p>For video as visual layer we are using images from word cards and text of sentences displayed on top of them.</p>',10)]))}const p=a(n,[["render",r]]);export{h as __pageData,p as default};
